@page "/chatrooms/delete"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using BlazorApp.Models
@attribute [Authorize]
@inject IDbContextFactory<BlazorApp.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Chatroom</h2>
    <hr />
    @if (chatroom is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@chatroom.Name</dd>
        </dl>
        <EditForm method="post" Model="chatroom" OnValidSubmit="DeleteChatroom" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(chatroom is null)">Delete</button> |
            <a href="/chatrooms">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Chatroom? chatroom;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        chatroom = await context.Chatroom.FirstOrDefaultAsync(m => m.Id == Id);

        if (chatroom is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteChatroom()
    {
        using var context = DbFactory.CreateDbContext();
        context.Chatroom.Remove(chatroom!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/chatrooms");
    }
}
